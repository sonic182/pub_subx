name: CI

on: [push, pull_request]

jobs:
  test:
    name: OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    runs-on: ubuntu-20.04
    env:
      MIX_ENV: test
    strategy:
      matrix:
        elixir: [ 1.12.0, 1.13.0, 1.14.0 ]
        otp: [ 23.0.0, 24.0.0 ]
        exclude:
          - elixir: 1.11.0
            otp: 24.0.0

    steps:
      - uses: actions/checkout@v2

      - name: Setup elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      - name: Cache
        uses: actions/cache@v3
        id: cache #id to use in retrieve action
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}_${{ matrix.otp }}_${{ matrix.elixir }}_cache_${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}_${{ matrix.otp }}_${{ matrix.elixir }}_cache_

      - name: Install Mix Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get

      - name: Compile dev
        if: steps.cache.outputs.cache-hit != 'true'
        run: mix compile
        env:
          MIX_ENV: dev

      - name: Check warnings
        run: mix compile --warnings-as-errors --no-deps-check
        env:
          MIX_ENV: dev

      - name: Compile test
        if: steps.cache.outputs.cache-hit != 'true'
        run: mix compile
        env:
          MIX_ENV: test

      - name: Check Formatting
        run: mix format --check-formatted

      - name: Run credo
        run: mix credo --strict --ignore todo

      - name: Run Tests
        run: mix test

      - name: Run dialyzer
        run: mix dialyzer
        env:
          MIX_ENV: dev
